
Перем мТокенOpenAI;
Перем мКонтекстРазговора;


#Область ПрограммныйИнтерфейс

Функция Инициализировать() Экспорт
	мКонтекстРазговора = Неопределено;
	
	Возврат ЭтотОбъект;
КонецФункции


Процедура УстановитьТокенOpenAI(ТокенOpenAI) Экспорт
	мТокенOpenAI = ТокенOpenAI;
КонецПроцедуры


Функция ТокенOpenAI() Экспорт
	Возврат мТокенOpenAI;
КонецФункции


Функция КонтекстРазговора() Экспорт
	Если мКонтекстРазговора = Неопределено Тогда
		лКонтекстРазговора = Новый ТаблицаЗначений;
		лКонтекстРазговора.Колонки.Добавить("Роль", Новый ОписаниеТипов("Строка"));
		лКонтекстРазговора.Колонки.Добавить("Сообщение", Новый ОписаниеТипов("Строка, Массив"));
		
		мКонтекстРазговора = лКонтекстРазговора;
	КонецЕсли;
	
	Возврат мКонтекстРазговора;
КонецФункции


Процедура СброситьКонтекстРазговора() Экспорт
	мКонтекстРазговора = Неопределено;
КонецПроцедуры


Функция ДобавитьСообщениеВКонтекст(Роль = "Пользователь", Сообщение) Экспорт
	лСтрока = КонтекстРазговора().Добавить();
	лСтрока.Роль = Роль;
	лСтрока.Сообщение = Сообщение;
	
	Возврат лСтрока;
КонецФункции


Функция ЧатЗавершениеСоздать(Параметры) Экспорт
	лЗащСоед = Новый ЗащищенноеСоединениеOpenSSL(, Новый СертификатыУдостоверяющихЦентровОС);
	лСоединение = Новый HTTPСоединение("api.openai.com", , , , , , лЗащСоед);
	
	лЗаголовки = Новый Соответствие;
	лЗаголовки["Content-Type"] = "application/json";
	лЗаголовки["Authorization"] = "Bearer " + мТокенOpenAI;
	
	лТелоСтруктура = Новый Структура;
	лТелоСтруктура.Вставить("model", Параметры.Модель);
	
	лБуфер = Неопределено;
	Если Параметры.Свойство("МаксимумТокенов", лБуфер) Тогда
		лТелоСтруктура.Вставить("max_completion_tokens", лБуфер);
	КонецЕсли;
	
	Если Параметры.Свойство("Температура", лБуфер) Тогда
		лТелоСтруктура.Вставить("temperature", лБуфер);
	КонецЕсли;
	
	Если Параметры.Свойство("ТопP", лБуфер) Тогда
		лТелоСтруктура.Вставить("top_p", лБуфер);
	КонецЕсли;
	
	лМодальности = Новый Массив;
	Если Параметры.Свойство("ВыводитьТекст", лБуфер) И лБуфер = Истина Тогда
		лМодальности.Добавить("text");
	КонецЕсли;
	
	Если Параметры.Свойство("ВыводитьАудио", лБуфер) И лБуфер = Истина Тогда
		лМодальности.Добавить("audio");
		
		лТелоСтруктура.Вставить("audio", Новый Структура("voice, format", Параметры.Голос, "mp3"));
	КонецЕсли;
	лТелоСтруктура.Вставить("modalities", лМодальности);
	
	Если Параметры.Свойство("JSONSchema", лБуфер) Тогда
		лФорматОтвета = Новый Структура("type, json_schema", "json_schema", СтруктураИзJSON(лБуфер, Истина));
		лТелоСтруктура.Вставить("response_format", лФорматОтвета);
	КонецЕсли;
	
	лСоотвРолей = Новый Соответствие;
	лСоотвРолей["Система"] = "system";
	лСоотвРолей["Пользователь"] = "user";
	лСоотвРолей["Ассистент"] = "assistant";
	
	лСообщения = Новый Массив;
	Для Каждого лТекСтрока Из КонтекстРазговора() Цикл
		лСообщение = Новый Структура;
		лСообщение.Вставить("role", лСоотвРолей[лТекСтрока.Роль]);
		
		Если ТипЗнч(лТекСтрока.Сообщение) = Тип("Строка") Тогда 
			лСообщение.Вставить("content", лТекСтрока.Сообщение);
		Иначе
			лМасСодержание = Новый Массив;
			Для Каждого лТекСодержание Из лТекСтрока.Сообщение Цикл
				Если лТекСодержание.Тип = "Текст" Тогда
					лМасСодержание.Добавить(Новый Структура("type, text", "text", лТекСодержание.Содержание));
				ИначеЕсли лТекСодержание.Тип = "Картинка" Тогда
					лСтруктURL = Новый Структура("url", DataURLИзКартинки(лТекСодержание.Содержание));
					лМасСодержание.Добавить(Новый Структура("type, image_url", "image_url", лСтруктURL));
				ИначеЕсли лТекСодержание.Тип = "Аудио" Тогда
					лСтруктАудио = Новый Структура("data, format", Base64Строка(лТекСодержание.Содержание.ДвоичныеДанные), лТекСодержание.Содержание.Формат);
					лМасСодержание.Добавить(Новый Структура("type, input_audio", "input_audio", лСтруктАудио));
				Иначе
					ВызватьИсключение НСтр("ru = 'Неожиданный тип содержания!'; uk = 'Неочікуваний тип вмісту!'");
				КонецЕсли;
			КонецЦикла;
			
			лСообщение.Вставить("content", лМасСодержание);
		КонецЕсли;
		
		лСообщения.Добавить(лСообщение);
	КонецЦикла;
	лТелоСтруктура.Вставить("messages", лСообщения);
	
	лТелоСтрока = JSONИзСтруктуры(лТелоСтруктура);
	
	лЗапрос = Новый HTTPЗапрос("/v1/chat/completions", лЗаголовки);
	лЗапрос.УстановитьТелоИзСтроки(лТелоСтрока, , ИспользованиеByteOrderMark.НеИспользовать);
	
	лОтвет = лСоединение.ОтправитьДляОбработки(лЗапрос);
	лОтветСтрока = лОтвет.ПолучитьТелоКакСтроку();
	Если НЕ (лОтвет.КодСостояния >= 200 И лОтвет.КодСостояния < 300) Тогда
		ВызватьИсключение лОтветСтрока;
	КонецЕсли;
	
	лОтветСтруктура = СтруктураИзJSON(лОтветСтрока);
	
	лСообщение = лОтветСтруктура.choices[0].message;
	лРоль = лСообщение.role;
	лРоль = ?(лРоль = "system", "Система", ?(лРоль = "user", "Пользователь", ?(лРоль = "assistant", "Ассистент", Неопределено)));
	
	лСодержание = Неопределено;
	Если лСообщение.Свойство("content", лСодержание) И ТипЗнч(лСодержание) = Тип("Строка") Тогда
		Возврат ДобавитьСообщениеВКонтекст(лРоль, лСодержание);
	ИначеЕсли лСообщение.Свойство("audio", лСодержание) И ТипЗнч(лСодержание) = Тип("Структура") Тогда
		лНовСообщение = НовыйСообщение();
		СообщениеДобавитьАудио(лНовСообщение, ПолучитьДвоичныеДанныеИзBase64Строки(лСодержание.data), "mp3");
		СообщениеДобавитьТекст(лНовСообщение, лСодержание.transcript);
		Возврат ДобавитьСообщениеВКонтекст(лРоль, лНовСообщение);
	Иначе
		ВызватьИсключение НСтр("ru = 'Необработанный вариант ответа!'; uk = 'Неопрацьований варіант відповіді!'");
	КонецЕсли;
	
КонецФункции


Функция НовыйСообщение() Экспорт
	Возврат Новый Массив;
КонецФункции


Функция СообщениеДобавитьТекст(Сообщение, Текст) Экспорт
	Сообщение.Добавить(Новый Структура("Тип, Содержание", "Текст", Текст));
КонецФункции


Функция СообщениеДобавитьКартинку(Сообщение, Картинка) Экспорт
	Сообщение.Добавить(Новый Структура("Тип, Содержание", "Картинка", Картинка));
КонецФункции


Функция СообщениеДобавитьАудио(Сообщение, ДвоичныеДанныеАудио, Формат) Экспорт
	Сообщение.Добавить(Новый Структура("Тип, Содержание", "Аудио", Новый Структура("ДвоичныеДанные, Формат", ДвоичныеДанныеАудио, Формат)));
КонецФункции

#КонецОбласти


#Область УниверсальныеМеханизмы

Функция СоединитьСтроку(Массив, Разделитель = ",") Экспорт
	лПотокВПамяти = Новый ПотокВПамяти;
	
	лЗаписьТекста = Новый ЗаписьТекста(лПотокВПамяти, КодировкаТекста.UTF8, Разделитель);
	
	Для Каждого лТекСтрока Из Массив Цикл
		лЗаписьТекста.ЗаписатьСтроку(лТекСтрока);
	КонецЦикла;
	
	лЗаписьТекста.Закрыть();
	
	лПотокВПамяти.Перейти(0, ПозицияВПотоке.Начало);
	
	лЧтениеТекста = Новый ЧтениеТекста(лПотокВПамяти, КодировкаТекста.UTF8);
	лРезультат = лЧтениеТекста.Прочитать();
	лЧтениеТекста.Закрыть();
	
	// Обрезаем последний разделитель
	Возврат Лев(лРезультат, СтрДлина(лРезультат) - СтрДлина(Разделитель));
КонецФункции


Функция JSONИзСтруктуры(Структура, ПараметрыЗаписиJSON = Неопределено) Экспорт
	лЗаписьJSON = Новый ЗаписьJSON;
	лЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	ЗаписатьJSON(лЗаписьJSON, Структура);
	
	Возврат лЗаписьJSON.Закрыть();
КонецФункции


Функция СтруктураИзJSON(СтрокаJSON, ПрочитатьВСоответсвие = Ложь) Экспорт
	лЧтениеJSON = Новый ЧтениеJSON;
	лЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
	Возврат ПрочитатьJSON(лЧтениеJSON, ПрочитатьВСоответсвие);
КонецФункции


Функция DataURLИзКартинки(Знач Картинка)
	лФормат = Картинка.Формат();
	лMimeType = ?(лФормат = ФорматКартинки.PNG, "image/png",
					?(лФормат = ФорматКартинки.JPEG, "image/jpeg", Неопределено));
	Если НЕ ЗначениеЗаполнено(лMimeType) Тогда
		Картинка = Картинка.Преобразовать(ФорматКартинки.PNG);
		лФормат = "image/png";
	КонецЕсли;
	
	Возврат DataURLИзДвоичныхДанных(Картинка.ПолучитьДвоичныеДанные(), лMimeType);
КонецФункции


Функция DataURLИзДвоичныхДанных(ДвоичныеДанные, MimeType = "application/octet-stream") Экспорт
	Возврат "data:" + MimeType + ";base64," + СтрЗаменить(СтрЗаменить(Base64Строка(ДвоичныеДанные), Символы.ПС, ""), Символы.ВК, "");
КонецФункции


Функция ФайловыйURL(Путь) Экспорт
	лФайл = Новый Файл(Путь);
	лПолныйПуть = лФайл.ПолноеИмя;

	лПолныйПуть = СтрЗаменить(лПолныйПуть, "\", "/");
	лПолныйПуть = КодироватьСтроку(лПолныйПуть, СпособКодированияСтроки.URLВКодировкеURL);
	Если Сред(лПолныйПуть, 2, 1) = ":" Тогда
		Возврат "file:///" + лПолныйПуть; // Путь типа C:\file.txt
	Иначе
		Возврат "file://" + лПолныйПуть; // Путь типа \\SERVER\share\file.txt
	КонецЕсли;
КонецФункции

#КонецОбласти
